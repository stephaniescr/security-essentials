/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package securityessential.resources;
import java.awt.Color;
import static java.awt.SystemColor.text;
import modelo.GeradorHash;
import modelo.GeradorSenha;
import modelo.Encriptador;
import modelo.Esteganografia;
import modelo.Backup;
import java.io.BufferedInputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.security.MessageDigest;
import java.security.Security;
import java.util.logging.Formatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.crypto.Cipher;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
/**
 *
 * @author stephanie
 */
public class SecurityEssentials extends javax.swing.JFrame {

    /**
     * Creates new form JFileChooserDemo
     */
    public SecurityEssentials() throws IOException {

        try {
            String fName = "/securityessential/resources/VT323-Regular.ttf";
            InputStream is = SecurityEssentials.class.getResourceAsStream(fName);
            GraphicsEnvironment ge = GraphicsEnvironment.getLocalGraphicsEnvironment();
            ge.registerFont(Font.createFont(Font.TRUETYPE_FONT, is));
        } catch (FontFormatException ex) {
            Logger.getLogger(SecurityEssentials.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IOException ex) {
            Logger.getLogger(SecurityEssentials.class.getName()).log(Level.SEVERE, null, ex);
        }

        initComponents();
        //getContentPane().setBackground(new java.awt.Color(42, 77, 105));
        for (int i = 0; i < tabbedPane.getTabCount(); i++) {
            tabbedPane.getComponentAt(i).setBackground(new java.awt.Color(31, 27, 39));
        }

        //tabbedPane.setBackgroundAt(0,new java.awt.Color(42, 77, 105));
       // tabbedPane.setIconAt(0, new ImageIcon(ImageIO.read(getClass().getResource("/storing.png")))
          //
        //        );
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        button1 = new java.awt.Button();
        button2 = new java.awt.Button();
        tabbedPane = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        txtPathHash = new javax.swing.JTextField();
        btnSelecionarArqHash = new javax.swing.JButton();
        lblTipoHash = new javax.swing.JLabel();
        cmbTipoHash = new javax.swing.JComboBox<>();
        txtHash = new javax.swing.JTextField();
        btnGerarHash = new javax.swing.JButton();
        lblHeaderHash = new javax.swing.JLabel();
        lblSelecioneArqHash = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        lblHeaderSenha = new javax.swing.JLabel();
        lblTamanhoSenha = new javax.swing.JLabel();
        txtTamanhoSenha = new javax.swing.JTextField();
        btnGerarSenha = new javax.swing.JButton();
        txtSenha = new javax.swing.JTextField();
        ckbNumeros = new javax.swing.JCheckBox();
        ckbCaixaBaixa = new javax.swing.JCheckBox();
        ckbCaixaAlta = new javax.swing.JCheckBox();
        ckbEspeciais = new javax.swing.JCheckBox();
        jPanel4 = new javax.swing.JPanel();
        lblHeaderAES = new javax.swing.JLabel();
        btnEncriptar = new javax.swing.JButton();
        btnDecriptar = new javax.swing.JButton();
        txtPathAES = new javax.swing.JTextField();
        btnSelecionarArqAES = new javax.swing.JButton();
        lblChave = new javax.swing.JLabel();
        txtChaveAES = new javax.swing.JTextField();
        lblSelecioneArqAES = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        txtPathImg = new javax.swing.JTextField();
        btnSelecionarArqImg = new javax.swing.JButton();
        lblSelecioneArqImg = new javax.swing.JLabel();
        txtMensagem = new javax.swing.JTextField();
        lblMensagem = new javax.swing.JLabel();
        btnAdcMsg = new javax.swing.JButton();
        btnExtrairMsg = new javax.swing.JButton();
        lblHeaderEsteganografia = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        txtPathOriginFolder = new javax.swing.JTextField();
        btnSelecionarOriginFolder = new javax.swing.JButton();
        txtPathBackupFolder = new javax.swing.JTextField();
        btnSelecionarBackupFolder = new javax.swing.JButton();
        btnGerarBackup = new javax.swing.JButton();
        lblBackupOrigin = new javax.swing.JLabel();
        lblBackup = new javax.swing.JLabel();
        lblHeaderBackup = new javax.swing.JLabel();

        fileChooser.setDialogTitle("This is my open dialog");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Security Essentials");
        setBackground(new java.awt.Color(255, 255, 255));
        setForeground(new java.awt.Color(0, 0, 0));

        button1.setLabel("button1");

        button2.setLabel("button2");

        tabbedPane.setMaximumSize(new java.awt.Dimension(153, 130));

        txtPathHash.setEditable(false);
        txtPathHash.setDisabledTextColor(new java.awt.Color(204, 204, 204));

        btnSelecionarArqHash.setFont(new java.awt.Font("Source Sans Pro", 1, 14)); // NOI18N
        btnSelecionarArqHash.setText("...");
        btnSelecionarArqHash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarArqHashActionPerformed(evt);
            }
        });

        lblTipoHash.setFont(new java.awt.Font("VT323", 0, 18)); // NOI18N
        lblTipoHash.setForeground(new java.awt.Color(255, 255, 255));
        lblTipoHash.setText("Escolha o tipo:");

        cmbTipoHash.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "MD2", "MD5", "SHA-1", "SHA-256", "SHA-384", "SHA-512" }));

        txtHash.setEditable(false);
        txtHash.setBackground(new java.awt.Color(204, 204, 204));

        btnGerarHash.setText("Gerar hash");
        btnGerarHash.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarHashActionPerformed(evt);
            }
        });

        lblHeaderHash.setFont(new java.awt.Font("VT323", 1, 36)); // NOI18N
        lblHeaderHash.setForeground(new java.awt.Color(255, 255, 255));
        lblHeaderHash.setText("Gerador de Hash");

        lblSelecioneArqHash.setFont(new java.awt.Font("VT323", 0, 18)); // NOI18N
        lblSelecioneArqHash.setForeground(new java.awt.Color(255, 255, 255));
        lblSelecioneArqHash.setText("Selecione um arquivo:");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(btnGerarHash)
                    .addComponent(lblHeaderHash)
                    .addComponent(lblSelecioneArqHash)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(txtPathHash, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSelecionarArqHash, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(lblTipoHash)
                        .addGap(10, 10, 10)
                        .addComponent(cmbTipoHash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(txtHash, javax.swing.GroupLayout.PREFERRED_SIZE, 357, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(180, 180, 180))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(lblHeaderHash)
                .addGap(18, 18, 18)
                .addComponent(lblSelecioneArqHash)
                .addGap(4, 4, 4)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPathHash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelecionarArqHash))
                .addGap(12, 12, 12)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTipoHash)
                    .addComponent(cmbTipoHash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(btnGerarHash)
                .addGap(16, 16, 16)
                .addComponent(txtHash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        tabbedPane.addTab("Gerador de Hash ", new javax.swing.ImageIcon(getClass().getResource("/securityessential/resources/encryption_s.png")), jPanel2); // NOI18N

        lblHeaderSenha.setFont(new java.awt.Font("VT323", 1, 36)); // NOI18N
        lblHeaderSenha.setForeground(new java.awt.Color(255, 255, 255));
        lblHeaderSenha.setText("Gerador de Senha");

        lblTamanhoSenha.setFont(new java.awt.Font("VT323", 0, 18)); // NOI18N
        lblTamanhoSenha.setForeground(new java.awt.Color(255, 255, 255));
        lblTamanhoSenha.setText("Tamanho da senha:");

        btnGerarSenha.setText("Gerar senha");
        btnGerarSenha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarSenhaActionPerformed(evt);
            }
        });

        txtSenha.setBackground(new java.awt.Color(204, 204, 204));

        ckbNumeros.setFont(new java.awt.Font("VT323", 0, 18)); // NOI18N
        ckbNumeros.setForeground(new java.awt.Color(255, 255, 255));
        ckbNumeros.setText("Usar números");

        ckbCaixaBaixa.setFont(new java.awt.Font("VT323", 0, 18)); // NOI18N
        ckbCaixaBaixa.setForeground(new java.awt.Color(255, 255, 255));
        ckbCaixaBaixa.setText("Usar caixa baixa");

        ckbCaixaAlta.setFont(new java.awt.Font("VT323", 0, 18)); // NOI18N
        ckbCaixaAlta.setForeground(new java.awt.Color(255, 255, 255));
        ckbCaixaAlta.setText("Usar caixa alta");

        ckbEspeciais.setFont(new java.awt.Font("VT323", 0, 18)); // NOI18N
        ckbEspeciais.setForeground(new java.awt.Color(255, 255, 255));
        ckbEspeciais.setText("Usar caracteres especiais");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblHeaderSenha)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(lblTamanhoSenha)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTamanhoSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnGerarSenha)
                    .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, 387, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(ckbNumeros)
                        .addGap(17, 17, 17)
                        .addComponent(ckbEspeciais))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(ckbCaixaBaixa)
                        .addGap(1, 1, 1)
                        .addComponent(ckbCaixaAlta)))
                .addContainerGap(171, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(lblHeaderSenha)
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTamanhoSenha)
                    .addComponent(txtTamanhoSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbCaixaBaixa)
                    .addComponent(ckbCaixaAlta))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ckbEspeciais)
                    .addComponent(ckbNumeros))
                .addGap(18, 18, 18)
                .addComponent(btnGerarSenha)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtSenha, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(45, 45, 45))
        );

        tabbedPane.addTab("Gerador de Senha ", new javax.swing.ImageIcon(getClass().getResource("/securityessential/resources/password_s.png")), jPanel3); // NOI18N

        lblHeaderAES.setFont(new java.awt.Font("VT323", 1, 36)); // NOI18N
        lblHeaderAES.setForeground(new java.awt.Color(255, 255, 255));
        lblHeaderAES.setText("Encriptação AES");

        btnEncriptar.setText("Encriptar");
        btnEncriptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEncriptarActionPerformed(evt);
            }
        });

        btnDecriptar.setText("Decriptar");
        btnDecriptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDecriptarActionPerformed(evt);
            }
        });

        txtPathAES.setEditable(false);
        txtPathAES.setDisabledTextColor(new java.awt.Color(204, 204, 204));

        btnSelecionarArqAES.setFont(new java.awt.Font("Source Sans Pro", 1, 14)); // NOI18N
        btnSelecionarArqAES.setText("...");
        btnSelecionarArqAES.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarArqAESActionPerformed(evt);
            }
        });

        lblChave.setFont(new java.awt.Font("VT323", 0, 18)); // NOI18N
        lblChave.setForeground(new java.awt.Color(255, 255, 255));
        lblChave.setText("Chave:");

        lblSelecioneArqAES.setFont(new java.awt.Font("VT323", 0, 18)); // NOI18N
        lblSelecioneArqAES.setForeground(new java.awt.Color(255, 255, 255));
        lblSelecioneArqAES.setText("Selecione um arquivo:");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addComponent(lblHeaderAES)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnEncriptar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDecriptar))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(txtPathAES, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSelecionarArqAES, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblChave)
                    .addComponent(txtChaveAES, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblSelecioneArqAES))
                .addGap(180, 180, 180))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(lblHeaderAES)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblSelecioneArqAES)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPathAES, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelecionarArqAES))
                .addGap(18, 18, 18)
                .addComponent(lblChave)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtChaveAES, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnEncriptar)
                    .addComponent(btnDecriptar))
                .addGap(45, 45, 45))
        );

        tabbedPane.addTab("Encriptação AES ", new javax.swing.ImageIcon("/Users/stephaniescremin/Downloads/Icones/file_s.png"), jPanel4); // NOI18N

        txtPathImg.setEditable(false);
        txtPathImg.setDisabledTextColor(new java.awt.Color(204, 204, 204));

        btnSelecionarArqImg.setFont(new java.awt.Font("Source Sans Pro", 1, 14)); // NOI18N
        btnSelecionarArqImg.setText("...");
        btnSelecionarArqImg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarArqImgActionPerformed(evt);
            }
        });

        lblSelecioneArqImg.setFont(new java.awt.Font("VT323", 0, 18)); // NOI18N
        lblSelecioneArqImg.setForeground(new java.awt.Color(255, 255, 255));
        lblSelecioneArqImg.setText("Selecione uma imagem:");

        lblMensagem.setFont(new java.awt.Font("VT323", 0, 18)); // NOI18N
        lblMensagem.setForeground(new java.awt.Color(255, 255, 255));
        lblMensagem.setText("Mensagem:");

        btnAdcMsg.setText("Adicionar mensagem");
        btnAdcMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdcMsgActionPerformed(evt);
            }
        });

        btnExtrairMsg.setText("Extrair mensagem");
        btnExtrairMsg.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExtrairMsgActionPerformed(evt);
            }
        });

        lblHeaderEsteganografia.setFont(new java.awt.Font("VT323", 1, 36)); // NOI18N
        lblHeaderEsteganografia.setForeground(new java.awt.Color(255, 255, 255));
        lblHeaderEsteganografia.setText("Esteganografia");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txtPathImg, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSelecionarArqImg, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblSelecioneArqImg)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(lblMensagem)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAdcMsg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExtrairMsg))
                    .addComponent(lblHeaderEsteganografia))
                .addGap(180, 180, 180))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(lblHeaderEsteganografia)
                .addGap(18, 18, 18)
                .addComponent(lblSelecioneArqImg)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPathImg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelecionarArqImg))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtMensagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblMensagem))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdcMsg)
                    .addComponent(btnExtrairMsg))
                .addGap(45, 45, 45))
        );

        tabbedPane.addTab("Esteganografia ", new javax.swing.ImageIcon("/Users/stephaniescremin/Downloads/Icones/picture_s.png"), jPanel1); // NOI18N

        txtPathOriginFolder.setEditable(false);
        txtPathOriginFolder.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        txtPathOriginFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPathOriginFolderActionPerformed(evt);
            }
        });

        btnSelecionarOriginFolder.setFont(new java.awt.Font("Source Sans Pro", 1, 14)); // NOI18N
        btnSelecionarOriginFolder.setText("...");
        btnSelecionarOriginFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarOriginFolderActionPerformed(evt);
            }
        });

        txtPathBackupFolder.setEditable(false);
        txtPathBackupFolder.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        txtPathBackupFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPathBackupFolderActionPerformed(evt);
            }
        });

        btnSelecionarBackupFolder.setFont(new java.awt.Font("Source Sans Pro", 1, 14)); // NOI18N
        btnSelecionarBackupFolder.setText("...");
        btnSelecionarBackupFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSelecionarBackupFolderActionPerformed(evt);
            }
        });

        btnGerarBackup.setText("Gerar Backup");
        btnGerarBackup.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGerarBackupActionPerformed(evt);
            }
        });

        lblBackupOrigin.setFont(new java.awt.Font("VT323", 0, 18)); // NOI18N
        lblBackupOrigin.setForeground(new java.awt.Color(255, 255, 255));
        lblBackupOrigin.setText("Selecione o diretório ou arquivo que deseja copiar:");

        lblBackup.setFont(new java.awt.Font("VT323", 0, 18)); // NOI18N
        lblBackup.setForeground(new java.awt.Color(255, 255, 255));
        lblBackup.setText("Selecione onde o backup será salvo:");

        lblHeaderBackup.setFont(new java.awt.Font("VT323", 1, 36)); // NOI18N
        lblHeaderBackup.setForeground(new java.awt.Color(255, 255, 255));
        lblHeaderBackup.setText("Backup");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(180, 180, 180)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(txtPathBackupFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSelecionarBackupFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnGerarBackup)
                    .addComponent(lblBackupOrigin)
                    .addComponent(lblBackup)
                    .addComponent(lblHeaderBackup)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(txtPathOriginFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSelecionarOriginFolder, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(180, 180, 180))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(lblHeaderBackup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblBackupOrigin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSelecionarOriginFolder)
                    .addComponent(txtPathOriginFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(41, 41, 41)
                .addComponent(lblBackup)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtPathBackupFolder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSelecionarBackupFolder))
                .addGap(40, 40, 40)
                .addComponent(btnGerarBackup)
                .addGap(45, 45, 45))
        );

        tabbedPane.addTab("Backup ", new javax.swing.ImageIcon("/Users/stephaniescremin/Downloads/icons/upload_s.png"), jPanel5); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabbedPane, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnGerarSenhaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarSenhaActionPerformed
        if(txtTamanhoSenha.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "O campo de tamanho da senha deve ser preenchido.");
        }
        else if(!ckbNumeros.isSelected()&&
                !ckbCaixaBaixa.isSelected()&&
                !ckbCaixaAlta.isSelected()&&
                !ckbEspeciais.isSelected()) {
            JOptionPane.showMessageDialog(null, "Pelo menos uma opção de caracteres deve ser selecionada.");
        }
        else {
            GeradorSenha GeradorSenha = new GeradorSenha.GeradorSenhaConstrutor()
            .usarDigitos(ckbNumeros.isSelected())
            .usarCaixaBaixa(ckbCaixaBaixa.isSelected())
            .usarCaixaAlta(ckbCaixaAlta.isSelected())
            .usarEspeciais(ckbEspeciais.isSelected())
            .construir();
            String senha = GeradorSenha.gerar(Integer.parseInt(txtTamanhoSenha.getText()));
            txtSenha.setText(senha);
        }
    }//GEN-LAST:event_btnGerarSenhaActionPerformed

    private void btnSelecionarArqHashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarArqHashActionPerformed
    int returnVal = fileChooser.showOpenDialog(this);
    if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file = fileChooser.getSelectedFile();
        txtPathHash.setText(file.getAbsolutePath());
        txtHash.setText("");
    } else {
        System.out.println("File access cancelled by user.");
    }
    }//GEN-LAST:event_btnSelecionarArqHashActionPerformed

    private void btnGerarHashActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarHashActionPerformed
        File file = fileChooser.getSelectedFile();
        if(txtPathHash.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Deve ser selecionado um arquivo.");
        } else {
            try {
              // What to do with the file, e.g. display it in a TextArea
              String tipo = String.valueOf(cmbTipoHash.getSelectedItem());
              String hash = GeradorHash.getChecksum(file, tipo);
              //////////////
              //textarea.read( new FileReader( hash ), null );
              txtHash.setText(hash);
            } catch (IOException ex) {
              System.out.println("problem accessing file"+file.getAbsolutePath());
            } catch (Exception ex) {
                Logger.getLogger(SecurityEssentials.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnGerarHashActionPerformed

    private void btnSelecionarArqAESActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarArqAESActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            txtPathAES.setText(file.getAbsolutePath());
        }
        else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_btnSelecionarArqAESActionPerformed

    private void btnEncriptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEncriptarActionPerformed
        /*
        depois, considerar abrir um dialog box para selecionar diretórios,
        no qual o arquivo encriptado/decriptado será salvo.
        por enquanto, será salvo no mesmo diretório do arquivo a ser encriptado/decriptado.
        */
        //String hash = modelo.GeradorHash.getChecksum(file, tipo);
        if(txtPathAES.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Deve ser selecionado um arquivo.");
        }
        else if(txtChaveAES.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "O campo de chave deve ser preenchido.");
        }
        else {
            String key = txtChaveAES.getText();
            File inputFile = fileChooser.getSelectedFile();
            String fileName = inputFile.getName();
            String encryptedFileName = fileName + ".aes";
            String folderToSaveOn = inputFile.getParent();
            File encryptedFile = new File(folderToSaveOn, encryptedFileName);

            try {
                Encriptador.processadorDeArquivos(Cipher.ENCRYPT_MODE,key,inputFile,encryptedFile);
                 JOptionPane.showMessageDialog(null, "Arquivo encriptado com sucesso!");
             } catch (Exception e) {
                 System.out.println(e.getMessage());
                 e.printStackTrace();
             }
        }
    }//GEN-LAST:event_btnEncriptarActionPerformed

    private void btnDecriptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDecriptarActionPerformed
        //Security.setProperty("crypto.policy", "unlimited");
        File encryptedFile = fileChooser.getSelectedFile();
        String fileName = encryptedFile.getName();
        if(txtPathAES.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Deve ser selecionado um arquivo.");
        }
        else if(txtChaveAES.getText().isEmpty()){
            JOptionPane.showMessageDialog(null, "O campo de chave deve ser preenchido.");
        }
        else if(!fileName.substring(fileName.length()-4).equals(".aes")){
            JOptionPane.showMessageDialog(null, "O formato do arquivo deve ser .aes");
        }
        else {
            String key = txtChaveAES.getText();
            String decryptedFileName = fileName.substring(0,fileName.length()-4);
            String folderToSaveOn = encryptedFile.getParent();
            File decryptedFile = new File(folderToSaveOn, decryptedFileName);
            try {
                 Encriptador.processadorDeArquivos(Cipher.DECRYPT_MODE,key,encryptedFile,decryptedFile);
                 JOptionPane.showMessageDialog(null, "Arquivo decriptado com sucesso!");
             } catch (Exception e) {
                 System.out.println(e.getMessage());
                 e.printStackTrace();
             }
        }
    }//GEN-LAST:event_btnDecriptarActionPerformed

    private void btnSelecionarArqImgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarArqImgActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = fileChooser.getSelectedFile();
            txtPathImg.setText(file.getAbsolutePath());
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_btnSelecionarArqImgActionPerformed

    private void btnAdcMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdcMsgActionPerformed
        if(txtPathImg.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Deve ser selecionada uma imagem.");
        } else{
                    if(txtMensagem.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Deve ser digitada uma mensagem.");
        } else{

        File imagem = fileChooser.getSelectedFile();
        String path = imagem.getParent();
        String fileName = imagem.getName();
        String fileNameWithoutEx = fileName.substring(0,fileName.length()-4);
        String outputFileName = fileName + "modified.jpg";
        String mensagem = txtMensagem.getText();
        System.out.println(path);
        System.out.println(fileNameWithoutEx);
        System.out.println(outputFileName);
        if(Esteganografia.encode(path,fileNameWithoutEx,"jpg",outputFileName,mensagem)){
            JOptionPane.showMessageDialog(null, "Mensagem gravada com sucesso!");
        }
        else {
            JOptionPane.showMessageDialog(null,
                    "The Image could not be encoded!",
                    "Error!", JOptionPane.INFORMATION_MESSAGE);
        }
        }}
    }//GEN-LAST:event_btnAdcMsgActionPerformed

    private void btnExtrairMsgActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExtrairMsgActionPerformed
        File imagem = fileChooser.getSelectedFile();
        String stat_path = imagem.getParent();
        String fileName = imagem.getName();
        String fileNameWithoutEx = fileName.substring(0,fileName.length()-4);
        System.out.println(stat_path);
        System.out.println(fileName);
        System.out.println(fileNameWithoutEx);
        String message = modelo.Esteganografia.decode(stat_path, fileNameWithoutEx);
        JOptionPane.showMessageDialog(null, "Mensagem extraída com sucesso!");
        txtMensagem.setText(message);
    }//GEN-LAST:event_btnExtrairMsgActionPerformed

    private void btnSelecionarOriginFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarOriginFolderActionPerformed
        JFileChooser chose=new JFileChooser();
        chose.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = chose.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = chose.getSelectedFile();
            txtPathOriginFolder.setText(file.getAbsolutePath());
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_btnSelecionarOriginFolderActionPerformed

    private void txtPathOriginFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPathOriginFolderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPathOriginFolderActionPerformed

    private void txtPathBackupFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPathBackupFolderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPathBackupFolderActionPerformed

    private void btnSelecionarBackupFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSelecionarBackupFolderActionPerformed
        JFileChooser chose2=new JFileChooser();
        chose2.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int returnVal = chose2.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File file = chose2.getSelectedFile();
            txtPathBackupFolder.setText(file.getAbsolutePath());
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_btnSelecionarBackupFolderActionPerformed

    private void btnGerarBackupActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGerarBackupActionPerformed
                if(txtPathOriginFolder.getText().isEmpty()) {
            JOptionPane.showMessageDialog(null, "Deve ser selecionado um arquivo ou diretório.");
        } else{

        File origin = new File(txtPathOriginFolder.getText());
        File backup = new File(txtPathBackupFolder.getText());
        try {
            Backup.copy(origin,backup);
                        JOptionPane.showMessageDialog(null, "Backup gerado com sucesso!");
        } catch (IOException ex) {
            Logger.getLogger(SecurityEssentials.class.getName()).log(Level.SEVERE, null, ex);
        }}
    }//GEN-LAST:event_btnGerarBackupActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SecurityEssentials.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SecurityEssentials.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SecurityEssentials.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SecurityEssentials.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    new SecurityEssentials().setVisible(true);
                } catch (IOException ex) {
                    Logger.getLogger(SecurityEssentials.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdcMsg;
    private javax.swing.JButton btnDecriptar;
    private javax.swing.JButton btnEncriptar;
    private javax.swing.JButton btnExtrairMsg;
    private javax.swing.JButton btnGerarBackup;
    private javax.swing.JButton btnGerarHash;
    private javax.swing.JButton btnGerarSenha;
    private javax.swing.JButton btnSelecionarArqAES;
    private javax.swing.JButton btnSelecionarArqHash;
    private javax.swing.JButton btnSelecionarArqImg;
    private javax.swing.JButton btnSelecionarBackupFolder;
    private javax.swing.JButton btnSelecionarOriginFolder;
    private java.awt.Button button1;
    private java.awt.Button button2;
    private javax.swing.JCheckBox ckbCaixaAlta;
    private javax.swing.JCheckBox ckbCaixaBaixa;
    private javax.swing.JCheckBox ckbEspeciais;
    private javax.swing.JCheckBox ckbNumeros;
    private javax.swing.JComboBox<String> cmbTipoHash;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JLabel lblBackup;
    private javax.swing.JLabel lblBackupOrigin;
    private javax.swing.JLabel lblChave;
    private javax.swing.JLabel lblHeaderAES;
    private javax.swing.JLabel lblHeaderBackup;
    private javax.swing.JLabel lblHeaderEsteganografia;
    private javax.swing.JLabel lblHeaderHash;
    private javax.swing.JLabel lblHeaderSenha;
    private javax.swing.JLabel lblMensagem;
    private javax.swing.JLabel lblSelecioneArqAES;
    private javax.swing.JLabel lblSelecioneArqHash;
    private javax.swing.JLabel lblSelecioneArqImg;
    private javax.swing.JLabel lblTamanhoSenha;
    private javax.swing.JLabel lblTipoHash;
    private javax.swing.JTabbedPane tabbedPane;
    private javax.swing.JTextField txtChaveAES;
    private javax.swing.JTextField txtHash;
    private javax.swing.JTextField txtMensagem;
    private javax.swing.JTextField txtPathAES;
    private javax.swing.JTextField txtPathBackupFolder;
    private javax.swing.JTextField txtPathHash;
    private javax.swing.JTextField txtPathImg;
    private javax.swing.JTextField txtPathOriginFolder;
    private javax.swing.JTextField txtSenha;
    private javax.swing.JTextField txtTamanhoSenha;
    // End of variables declaration//GEN-END:variables
}
